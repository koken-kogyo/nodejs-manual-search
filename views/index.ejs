<!-- index.ejs -->
<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <title>電子マニュアル</title>
    <!-- レスポンシブwebデザインの指定 --><!-- デバイスの横幅合わせ,等倍表示（半角空白入れるな！） -->
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <!-- link href="https://use.fontawesome.com/releases/v5.15.4/css/all.css" rel="stylesheet" -->
    <link rel="stylesheet" href="/static/css/style-basic.css">
    <link rel="stylesheet" href="/static/css/style-index.css">
</head>
<body>
    <!-- Header -->
    <%- include("_header.ejs", { req, title: title }) %>

    <div id="containers">
        <!-- Groups -->
        <div id="navigate">
            <!-- 入力ボックス -->
            <div class="navi-item">
                <div class="large">社員番号:</div>
                <div class="normal">Employee number (Barcode)</div>
                <div class="input"><input type="text" placeholder="担当者コード" id="input-empno"></div>
            </div>
            <div class="navi-item">
                <div class="large">作業者名:</div>
                <div class="normal">Worker</div>
                <label id="worker">Worker</label>
            </div>
            <div class="navi-item">
                <div class="large">製品バーコード：</div>
                <div class="normal">Product code (Barcode)</div>
                <input type="text" placeholder="品番をスキャン" oninput="inputChange()" id="input-hmcd">
            </div>
            <div></div>
            <div class="navi-button">
                <div class="button-title">Worker Change</div>
                <a href="javascript:WorkerChange()">
                    <button class="button">作業者変更</button>
                </a>
            </div>
            <div class="navi-button">
                <div class="button-title">View History</div>
                <a href="javascript:ViewHistory()">
                    <button class="button">履歴を表示</button>
                </a>
            </div>
            <div class="navi-button">
                <div class="button-title">Finish</div>
                <a href="javascript:Finish()">
                    <button class="button">作業終了</button>
                </a>
           </div>
            <input type="hidden" name="pdfcd" id="pdfcd" value="<%= req.params.pdfcd %>">
            <input type="hidden" name="searchhmcd" id="searchhmcd" value="">
            <input type="hidden" name="pageno" id="pageno" value="">
            <input type="hidden" name="converthmcd" id="converthmcd" value="">
        </div>

        <!-- Details -->
        <div id="details">
            <div id="output">
                <iframe src="/static/pdfs/Initialize.pdf#view=FitV&toolbar=0&zoom=FitV" width="100%" height="100%" frameborder="0" style="border:none;">
                    <p>
                        Your Browser does not support PFD files.
                    </p>
                </iframe>
            </div>
        </div>
    </div>

    <!-- Footer -->
    <%- include("_footer.ejs", req) %>

    <!-- ブラウザ読み込み完了後のJavaScriptを記述 -->
    <script type="text/javascript">

        // キーダウンイベントリスナーを設定
        const inputEmpno = document.getElementById("input-empno");
        const inputHmcd = document.getElementById("input-hmcd");
        inputEmpno.addEventListener("keydown", empnoKeydown);
        inputEmpno.addEventListener("blur", getEmpName);
        inputHmcd.addEventListener("keydown", hmcdKeydown);

        // 初期フォーカスを設定
        inputEmpno.select(); 
        
        // 担当者コードコールバック関数
        function empnoKeydown(e) {
            if (e.key === "Enter" && this.value !== "") {
                getEmpName(e);
                return;
            }
        }
        // 担当者検索関数
        function getEmpName(e) {
            const inputEmpno = document.getElementById("input-empno").value;
            if (inputEmpno != "") {
                const empno = ("00000" + inputEmpno).slice(-5);
                const xmlHttpRequest = new XMLHttpRequest();
                xmlHttpRequest.open('GET', `/search/km0010/${empno}`, false); // 第3引数false:同期通信
                xmlHttpRequest.send();
                if (xmlHttpRequest.readyState == 4 && xmlHttpRequest.status == 200 ) {
                    const name = JSON.parse(xmlHttpRequest.responseText);
                    // >8 >16
                    if (name.length > 16) {
                        document.querySelector("#worker").style.fontSize = "0.9em";
                    } else if (name.length > 8) {
                        document.querySelector("#worker").style.fontSize = "1.1em";
                    } else {
                        document.querySelector("#worker").style.fontSize = "1.5em";
                    }
                    document.getElementById("worker").innerText = name;
                    document.getElementById("input-hmcd").select();
                } else {
                    document.getElementById("worker").innerText = "担当者が見つかりません";
                    document.querySelector("#worker").style.fontSize = "1.1em";
                }
            } else {
                document.getElementById("worker").innerText = "Worker";
            }
        }

        // キーボード入力小文字から大文字変換
        function inputChange(){
            const inputHMCD = document.getElementById("input-hmcd"); 
            const HMCD = inputHMCD.value.toUpperCase().replace("%", "");
            //alert(inputHMCD.value + " -> " + HMCD);
            inputHMCD.value = HMCD;
        }

        // 手順書の表示（品番入力のコールバック関数）
        function hmcdKeydown(e) {
            if (e.key === "Enter" && this.value !== "") {

                // 担当者コードの入力チェック
                const inputEmpno = document.getElementById("input-empno");
                if (inputEmpno.value == "" || inputEmpno.value == null) {
                    alert("担当者コードを先に入力してください．");
                    inputEmpno.select(); 
                    return;
                }

                // 終了処理で入力ボックスがクリアされる前に変数に格納
                let inputHmcd = document.getElementById("input-hmcd").value;

                // 作業中が存在した場合、終了処理を先に行う
                const searchhmcd = document.getElementById("searchhmcd").value;
                if (searchhmcd != "" && searchhmcd != null) {
                    Finish(); 
                }

                const title = document.getElementById("menutitle");
                const titlepage = document.getElementById("titlepage");
                const output = document.getElementById("output");
                const pdfcd = document.getElementById("pdfcd").value;
                const empno = ("00000" + document.getElementById("input-empno").value).slice(-5);

                const xmlHttpRequest = new XMLHttpRequest();
                xmlHttpRequest.open('GET', `/search/filename/${pdfcd}/${inputHmcd}`, false);
                xmlHttpRequest.send();
                if (xmlHttpRequest.readyState == 4 && xmlHttpRequest.status == 200 ) {
                    const aryfn = JSON.parse(xmlHttpRequest.responseText);

                    // タイトル文字列更新
                    title.innerText = "手順書 [ " + aryfn[0] + " ] ";
                    document.querySelector("#menutitle").style.left = "calc((100vw / 2) - " + aryfn[0].length / 3 + "em)"

                    // ファイル名から品番を抽出
                    const hmcd = aryfn[0].split("_")[2].toUpperCase().replace(".PDF", "");

                    // 1件Hitの場合、入力品番を上書きする
                    if (aryfn.length == 1) {
                        titlepage.innerText = "作業中";
                        document.getElementById("input-hmcd").value = hmcd;
                        inputHmcd = hmcd;
                    }
                    
                    // 複数Hitした場合、作業開始ボタン、ページ切替ボタンを表示
                    let play = "";
                    let next = "";
                    if (aryfn.length > 1) {
                        titlepage.innerText = aryfn.length + "件Hit";
                        play = "<a href='javascript:play()'><img class='play' src='/static/images/fa-play-circle.png'></a>";
                        next = "<a href='javascript:next()'><img class='next' src='/static/images/fa-chevron-circle-right.png'></a>";
                    }

                    // PDF表示
                    if (pdfcd == "6077") {
                        const subFolder = "【検証用】炉出口検査PDF";
                        const pdfPath = `/static/pdfs/${subFolder}/`;
                        const pdfName = aryfn[0];
                        const pdfPara = "#view=FitV&toolbar=0&zoom=FitV";
                        output.innerHTML = `<iframe src='${pdfPath}${pdfName}${pdfPara}' width='100%' height='100%' frameborder='0' 
                        style='border:none;'></iframe>${play}${next}`;

                    // JPEG表示
                    } else if (pdfcd == "6078") {
                        const subFolder = "【検証用】炉投入荷姿PDF";
                        const jpegPath = `/static/jpegs/${subFolder}/`;
                        const jpegName = aryfn[0].toUpperCase().replace("PDF", "jpeg");
                        output.innerHTML = `<img src='${jpegPath}${jpegName}' width='99%' frameborder='0' style='margin:auto'>>${play}${next}`;

                    } else {
                        alert("プログラム想定異常が発生しました．\nシステム担当者に連絡してください");
                        return;
                    }

                    // 作業履歴ファイルDB更新
                    if (aryfn.length == 1) {
                        xmlHttpRequest.open('GET', `/insert/${pdfcd}/${empno}/${hmcd}`, false);
                        xmlHttpRequest.send();
                        if (xmlHttpRequest.readyState == 4 && xmlHttpRequest.status == 299 ) {
                            alert(pfdcd + ":" + empno + ":" + hmcd + ":");
                            alert("目視検査履歴ファイルの登録に失敗しました\n\nシステム担当者に連絡した上で\n作業は継続してください．");
                        }
                    }

                    // 検索状態を保持
                    document.getElementById("searchhmcd").value = inputHmcd;
                    document.getElementById("converthmcd").value = hmcd;
                    document.getElementById("pageno").value = "1";
                } else {
                    const subFolder = (pdfcd == "6077") ? "【検証用】炉出口検査PDF" : "【検証用】炉投入荷姿PDF";
                    title.innerText = `手順書 ${subFolder}`;
                    titlepage.innerText = "";
                    document.querySelector("#menutitle").style.left = "calc((100vw / 2) - 3em)"
                    document.getElementById("input-hmcd").value = inputHmcd;
                    // PDF表示
                    const pdfPath = "/static/pdfs/";
                    const pdfName = "Nothing.pdf";
                    output.innerHTML = `<iframe src='${pdfPath}${pdfName}#view=FitV&toolbar=0&zoom=FitV' width='100%' height='100%' frameborder='0' style='border:none;'></iframe>`;
                    // 検索状態を保持
                    document.getElementById("searchhmcd").value = "";
                    document.getElementById("converthmcd").value = "";
                    document.getElementById("pageno").value = "";
                }
                this.select();
            }
        }

        // 作業開始
        function play() {
            const pdfcd = document.getElementById("pdfcd").value;
            const empno = ("00000" + document.getElementById("input-empno").value).slice(-5);
            const hmcd = document.getElementById("converthmcd").value;

            // 開始状態に設定
            document.getElementById("titlepage").innerText = "作業中";
            document.getElementById("input-hmcd").value = hmcd;
            document.getElementById("searchhmcd").value = hmcd;
            if (document.querySelector(".prev")) { document.querySelector(".prev").style.display = "none"; }
            if (document.querySelector(".play")) { document.querySelector(".play").style.display = "none"; }
            if (document.querySelector(".next")) { document.querySelector(".next").style.display = "none"; }

            const xmlHttpRequest = new XMLHttpRequest();
            xmlHttpRequest.open('GET', `/insert/${pdfcd}/${empno}/${hmcd}`, false);
            xmlHttpRequest.send();
            if (xmlHttpRequest.readyState == 4 && xmlHttpRequest.status == 299 ) {
                alert("目視検査履歴ファイルの登録に失敗しました\n\nシステム担当者に連絡した上で\n作業は継続してください．");
            }
            document.getElementById("input-hmcd").select();
        }

        // 次ページ
        function next() {
            const searchhmcd = document.getElementById("searchhmcd").value;
            const pageno = Number(document.getElementById("pageno").value) + 1;
            const pdfcd = document.getElementById("pdfcd").value;
            const title = document.getElementById("menutitle");
            const titlepage = document.getElementById("titlepage");
            const output = document.getElementById("output");
                
            const xmlHttpRequest = new XMLHttpRequest();
            xmlHttpRequest.open('GET', `/search/filename/${pdfcd}/${searchhmcd}`, false);
            xmlHttpRequest.send();
            if (xmlHttpRequest.readyState == 4 && xmlHttpRequest.status == 200 ) {
                const fns = JSON.parse(xmlHttpRequest.responseText);

                // タイトル文字列更新
                title.innerText = "手順書 [ " + fns[pageno - 1] + " ] ";
                titlepage.innerText = (pageno) + "/" + fns.length + "件";
                document.querySelector("#menutitle").style.left = "calc((100vw / 2) - " + fns[pageno - 1].length / 3 + "em)"

                // ファイル名から品番を抽出
                const hmcd = fns[pageno - 1].split("_")[2].toUpperCase().replace(".PDF", "");

                // 作業開始ボタン、ページ切替ボタンを表示
                let prev = "<a href='javascript:prev()'><img class='prev' src='/static/images/fa-chevron-circle-left.png'></a>";
                let play = "<a href='javascript:play()'><img class='play' src='/static/images/fa-play-circle.png'></a>";
                let next = "";
                if (fns.length == pageno) {
                    next = "";
                } else {
                    next = "<a href='javascript:next()'><img class='next' src='/static/images/fa-chevron-circle-right.png'></a>";
                }

                // PDF表示
                if (pdfcd == "6077") {
                    const subFolder = "【検証用】炉出口検査PDF";
                    const pdfPath = `/static/pdfs/${subFolder}/`;
                    const pdfName = fns[pageno - 1];
                    const pdfPara = "#view=FitV&toolbar=0&zoom=FitV";
                    output.innerHTML = `${prev}<iframe src='${pdfPath}${pdfName}${pdfPara}' width='100%' height='100%' frameborder='0' 
                    style='border:none;'></iframe>${play}${next}`;

                // JPEG表示
                } else if (pdfcd == "6078") {
                    const subFolder = "【検証用】炉投入荷姿PDF";
                    const jpegPath = `/static/jpegs/${subFolder}/`;
                    const jpegName = fns[pageno - 1].toUpperCase().replace("PDF", "jpeg");
                    let marginTop = 20;
                    output.innerHTML = `${prev}<img src='${jpegPath}${jpegName}' width='100%' frameborder='0' style='margin-top:${marginTop}px'>${play}${next}`;

                } else {
                    alert("プログラム想定異常が発生しました．\nシステム担当者に連絡してください");
                    return;
                }

                // 検索状態を保持
                document.getElementById("searchhmcd").value = searchhmcd;
                document.getElementById("converthmcd").value = hmcd;
                document.getElementById("pageno").value = pageno;
            } else {
                const subFolder = (pdfcd == "6077") ? "【検証用】炉出口検査PDF" : "【検証用】炉投入荷姿PDF";
                title.innerText = `手順書 ${subFolder}`;
                titlepage.innerText = "";
                document.querySelector("#menutitle").style.left = "calc((100vw / 2) - 3em)"
                // PDF表示
                const pdfPath = "/static/pdfs/";
                const pdfName = "Nothing.pdf";
                output.innerHTML = `<iframe src='${pdfPath}${pdfName}#view=FitV&toolbar=0&zoom=FitV' width='100%' height='100%' frameborder='0' style='border:none;'></iframe>`;
                document.getElementById("searchhmcd").value = "";
                document.getElementById("converthmcd").value = "";
                document.getElementById("pageno").value = "";
            }
            document.getElementById("input-hmcd").select();
        }

        // 前ページ
        function prev() {
            const searchhmcd = document.getElementById("searchhmcd").value;
            const pageno = Number(document.getElementById("pageno").value) - 1;
            const pdfcd = document.getElementById("pdfcd").value;
            const title = document.getElementById("menutitle");
            const titlepage = document.getElementById("titlepage");
            const output = document.getElementById("output");
                
            const xmlHttpRequest = new XMLHttpRequest();
            xmlHttpRequest.open('GET', `/search/filename/${pdfcd}/${searchhmcd}`, false);
            xmlHttpRequest.send();
            if (xmlHttpRequest.readyState == 4 && xmlHttpRequest.status == 200 ) {
                const fns = JSON.parse(xmlHttpRequest.responseText);

                // タイトル文字列更新
                title.innerText = "手順書 [ " + fns[pageno - 1] + " ] ";
                titlepage.innerText = (pageno) + "/" + fns.length + "件";
                document.querySelector("#menutitle").style.left = "calc((100vw / 2) - " + fns[pageno - 1].length / 3 + "em)"

                // ファイル名から品番を抽出
                const hmcd = fns[pageno - 1].split("_")[2].toUpperCase().replace(".PDF", "");

                // 作業開始ボタン、ページ切替ボタンを表示
                let prev = "";
                if (pageno == 1) {
                    prev = "";
                } else {
                    prev = "<a href='javascript:prev()'><img class='prev' src='/static/images/fa-chevron-circle-left.png'></a>";
                }
                let play = "<a href='javascript:play()'><img class='play' src='/static/images/fa-play-circle.png'></a>";
                let next = "<a href='javascript:next()'><img class='next' src='/static/images/fa-chevron-circle-right.png'></a>";
                
                // PDF表示
                if (pdfcd == "6077") {
                    const subFolder = "【検証用】炉出口検査PDF";
                    const pdfPath = `/static/pdfs/${subFolder}/`;
                    const pdfName = fns[pageno - 1];
                    const pdfPara = "#view=FitV&toolbar=0&zoom=FitV";
                    output.innerHTML = `${prev}<iframe src='${pdfPath}${pdfName}${pdfPara}' width='100%' height='100%' frameborder='0' 
                    style='border:none;'></iframe>${play}${next}`;

                // JPEG表示
                } else if (pdfcd == "6078") {
                    const subFolder = "【検証用】炉投入荷姿PDF";
                    const jpegPath = `/static/jpegs/${subFolder}/`;
                    const jpegName = fns[pageno - 1].toUpperCase().replace("PDF", "jpeg");
                    let marginTop = 20;
                    output.innerHTML = `${prev}<img src='${jpegPath}${jpegName}' width='100%' frameborder='0' style='margin-top:${marginTop}px'>${play}${next}`;

                } else {
                    alert("プログラム想定異常が発生しました．\nシステム担当者に連絡してください");
                    return;
                }

                // 検索状態を保持
                document.getElementById("searchhmcd").value = searchhmcd;
                document.getElementById("converthmcd").value = hmcd;
                document.getElementById("pageno").value = pageno;
            } else {
                const subFolder = (pdfcd == "6077") ? "【検証用】炉出口検査PDF" : "【検証用】炉投入荷姿PDF";
                title.innerText = `手順書 ${subFolder}`;
                document.querySelector("#menutitle").style.left = "calc((100vw / 2) - 3em)"
                // PDF表示
                const pdfPath = "/static/pdfs/";
                const pdfName = "Nothing.pdf";
                output.innerHTML = `<iframe src='${pdfPath}${pdfName}#view=FitV&toolbar=0&zoom=FitV' width='100%' height='100%' frameborder='0' style='border:none;'></iframe>`;
                document.getElementById("searchhmcd").value = "";
                document.getElementById("converthmcd").value = "";
                document.getElementById("pageno").value = "";
            }
            document.getElementById("input-hmcd").select();
        }

        // 作業終了
        function Finish() {
            const pdfcd = document.getElementById("pdfcd").value;
            const empno = ("00000" + document.getElementById("input-empno").value).slice(-5);
            const searchhmcd = document.getElementById("searchhmcd").value;
            const hmcd = document.getElementById("input-hmcd").value;
            if (searchhmcd == "" || searchhmcd == null) { location.href = "/"; } // TopPageに戻る
            /*
            if (searchhmcd != document.getElementById("input-hmcd").value) {
                let msg = `表示中の手順書と製品コードが相違してます！ (Product code is Deffer)\n`;
                msg = msg + `[ ${searchhmcd} ]を 作業終了にします．よろしいですか？`;
                if (!window.confirm(msg)) { return; }
            }
            */
            // (1) XMLHttpRequestオブジェクトを作成
            const xmlHttpRequest = new XMLHttpRequest();
            // (2) 作業履歴ファイルDB更新
            xmlHttpRequest.open('GET', `/update/${pdfcd}/${empno}/${searchhmcd}`, false);
            xmlHttpRequest.send();
            // (3) 同期処理終了後、ステータス判定
            if (xmlHttpRequest.readyState == 4 && xmlHttpRequest.status == 299 ) {
                alert("目視検査履歴ファイルの更新に失敗しました\n\nシステム担当者に連絡した上で\n作業は継続してください．");
            }
            const subFolder = (pdfcd == "6077") ? "【検証用】炉出口検査PDF" : "【検証用】炉投入荷姿PDF";
            document.getElementById("menutitle").innerText = `手順書 ${subFolder}`;
            document.querySelector("#menutitle").style.left = "calc((100vw / 2) - 3em)"
            document.getElementById("titlepage").innerText = "";
            document.getElementById("input-hmcd").value = "";
            document.getElementById("searchhmcd").value = "";
            document.getElementById("converthmcd").value = "";
            document.getElementById("pageno").value = "";
            const output = document.getElementById("output");
            const pdfPath = "/static/pdfs/";
            const pdfName = "Initialize.pdf";
            output.innerHTML = `<iframe src='${pdfPath}${pdfName}#view=FitV&toolbar=0&zoom=FitV' width='100%' height='100%' frameborder='0' style='border:none;'></iframe>`;
            document.getElementById("input-hmcd").select();
        }

        // 作業者変更
        function WorkerChange() {
            const searchhmcd = document.getElementById("searchhmcd").value;
            if (searchhmcd != "" && searchhmcd != null) { Finish(); } // 作業中の場合、終了処理
            const pdfcd = document.getElementById("pdfcd").value;
            location.href = `/${pdfcd}`;
        }

        // 履歴表示
        function ViewHistory() {
            const pdfcd = document.getElementById("pdfcd").value;
//            location.href = `/history/${pdfcd}`;
            window.open(`/history/${pdfcd}`);
        }
        
    </script>

</body>
</html>
